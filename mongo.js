const mongoose = require("mongoose");

// Handle the case where password is not provided as an argument
if (process.argv.length < 3) {
  console.log("Please provide password as an argument.");
  process.exit(1);
}

const password = process.argv[2];
const url = `mongodb+srv://haimanti1029:${password}@cluster0.1bnkb1g.mongodb.net/Phonebook?retryWrites=true&w=majority&appName=Cluster0`;

mongoose.set("strictQuery", false);

mongoose.connect(url);

const personSchema = new mongoose.Schema({
  name: String,
  number: String,
  id: String,
});

const Person = mongoose.model("Person", personSchema);

// Case 1: Add a new person
if (process.argv.length === 5) {
  const name = process.argv[3];
  const number = process.argv[4];

  // Note: The id field is typically auto-generated by MongoDB,
  // so you don't need to manually assign it.
  const newPerson = new Person({
    name: name,
    number: number,
  });

  newPerson
    .save()
    .then((result) => {
      console.log(`Added ${result.name} number ${result.number} to phonebook`);
      return Person.find({});
    })
    .then((result) => {
      console.log("Phonebook:");
      result.forEach((person) => {
        console.log(`${person.name} ${person.number}`);
      });
    })
    .finally(() => {
      mongoose.connection.close();
    });
}
// Case 2: Display all people
else if (process.argv.length === 3) {
  const newperson = new Person({
    name: "Raju",
    number: "7609081504",
  });
  newperson
    .save()
    .then((result) => {
      console.log(`Added ${result.name} number ${result.number} to phonebook`);
      return Person.find({});
    })
    .then((result) => {
      console.log("Phonebook:");
      result.forEach((person) => {
        console.log(`${person.name} ${person.number}`);
      });
    })
    .finally(() => {
      mongoose.connection.close();
    });
}
// Handle incorrect arguments
else {
  console.log("Invalid arguments.");
  console.log("To add a person: node script.js <password> <name> <number>");
  console.log("To list all people: node script.js <password>");
  mongoose.connection.close();
}
